{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Navbar/NavbarLink.jsx","components/Menu/Menu.jsx","components/Projects/Projects.jsx","components/About/About.jsx","components/SocialMedia/SocialMediaLink.jsx","components/SocialMedia/SocialMedia.jsx","components/App/App.js","serviceWorker.js","index.js"],"names":["Navbar","props","state","sticked","window","addEventListener","this","handleScroll","bind","removeEventListener","id","className","children","scrollY","innerHeight","setState","React","Component","NavbarLink","href","Menu","title","Projects","About","SocialMediaLink","tooltip","linkClassName","target","rel","SocialMedia","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yaAwCeA,G,wDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,GAHM,E,gEAQjBC,OAAOC,iBAAiB,SAAUC,KAAKC,aAAaC,KAAKF,S,6CAIzDF,OAAOK,oBAAoB,SAAUH,KAAKC,gB,+BAI1C,OACE,yBAAKG,GAAG,SAASC,UAAWL,KAAKJ,MAAMC,QAAU,SAAW,IACzDG,KAAKL,MAAMW,Y,qCAOK,EAAjBR,OAAOS,QAAcT,OAAOU,cAAsC,IAAvBR,KAAKJ,MAAMC,QACxDG,KAAKS,SAAS,CAAEZ,SAAS,IAED,EAAjBC,OAAOS,QAAcT,OAAOU,cAAsC,IAAvBR,KAAKJ,MAAMC,SAC7DG,KAAKS,SAAS,CAAEZ,SAAS,Q,GA9BVa,IAAMC,Y,MCKZC,MANf,SAAoBjB,GAClB,OACE,uBAAGkB,KAAMlB,EAAMkB,KAAMR,UAAU,cAAcV,EAAMW,WCaxCQ,MAbf,WACI,OACI,yBAAKV,GAAG,QACJ,wBAAIA,GAAG,YAAP,2BACA,kBAAC,EAAD,CAAQW,MAAM,QACV,kBAAC,EAAD,CAAYF,KAAK,aAAjB,YACA,kBAAC,EAAD,CAAYA,KAAK,UAAjB,SACA,kBAAC,EAAD,CAAYA,KAAK,gBAAjB,mB,MCDDG,MARf,WACE,OACE,yBAAKZ,GAAG,YACN,0C,MCQSa,MAXf,WACI,OACI,yBAAKb,GAAG,SACJ,qCACA,4dACA,4dACA,8d,YCEGc,MARf,SAAyBvB,GACrB,OACI,yBAAKwB,QAASxB,EAAMoB,OAChB,uBAAGV,UAAW,mBAAqBV,EAAMyB,cAAeP,KAAMlB,EAAMkB,KAAMQ,OAAO,SAASC,IAAI,uBAAuB3B,EAAMoB,SCWxHQ,MAbf,WACI,OACI,yBAAKnB,GAAG,eACJ,4CACA,yBAAKC,UAAU,wBACX,kBAAC,EAAD,CAAiBQ,KAAK,gCAAgCE,MAAM,SAASK,cAAc,eACnF,kBAAC,EAAD,CAAiBP,KAAK,iCAAiCE,MAAM,UAAUK,cAAc,gBACrF,kBAAC,EAAD,CAAiBP,KAAK,8BAA8BE,MAAM,UAAUK,cAAc,kBCOnFI,MAXf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDcC,QACW,cAA7B3B,OAAO4B,SAASC,UAEe,UAA7B7B,OAAO4B,SAASC,UAEhB7B,OAAO4B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9b61b587.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sticked: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"navbar\" className={this.state.sticked ? \"sticky\" : \"\"}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleScroll() {\r\n    // TODO: Change window.innerHeight to the navbar's actual top\r\n    if (window.scrollY * 2 < window.innerHeight && this.state.sticked === true) {\r\n      this.setState({ sticked: false });\r\n    }\r\n    else if (window.scrollY * 2 > window.innerHeight && this.state.sticked !== true) {\r\n      this.setState({ sticked: true });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './NavbarLink.css';\r\n\r\nfunction NavbarLink(props) {\r\n  return (\r\n    <a href={props.href} className=\"navbarLink\">{props.children}</a>\r\n  );\r\n}\r\n\r\nexport default NavbarLink;\r\n","import React from 'react';\r\nimport './Menu.css';\r\nimport Navbar from 'components/Navbar/Navbar.jsx';\r\nimport NavbarLink from 'components/Navbar/NavbarLink.jsx';\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div id=\"menu\">\r\n            <h1 id=\"menuText\">Eldemarkki - Programmer</h1>\r\n            <Navbar title=\"Home\">\r\n                <NavbarLink href=\"#projects\">Projects</NavbarLink>\r\n                <NavbarLink href=\"#about\">About</NavbarLink>\r\n                <NavbarLink href=\"#socialMedia\">Social media</NavbarLink>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport './Projects.css';\r\n\r\nfunction Projects() {\r\n  return (\r\n    <div id=\"projects\">\r\n      <h2>Projects</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About() {\r\n    return (\r\n        <div id=\"about\">\r\n            <h2>About</h2>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport './SocialMediaLink.css';\r\n\r\nfunction SocialMediaLink(props) {\r\n    return (\r\n        <div tooltip={props.title}>\r\n            <a className={\"socialMediaLink \" + props.linkClassName} href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">{props.title}</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialMediaLink;","import React from 'react';\r\nimport './SocialMedia.css';\r\nimport SocialMediaLink from './SocialMediaLink.jsx';\r\n\r\nfunction SocialMedia() {\r\n    return (\r\n        <div id=\"socialMedia\">\r\n            <h2>Social media</h2>\r\n            <div className=\"socialMediaContainer\">\r\n                <SocialMediaLink href=\"https://github.com/Eldemarkki\" title=\"GitHub\" linkClassName=\"githubLink\" />\r\n                <SocialMediaLink href=\"https://twitter.com/eldemarkki\" title=\"Twitter\" linkClassName=\"twitterLink\" />\r\n                <SocialMediaLink href=\"https://eldemarkki.itch.io/\" title=\"Itch.io\" linkClassName=\"itchioLink\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialMedia;","import React from 'react';\nimport './App.css';\nimport Menu from 'components/Menu/Menu.jsx';\nimport Projects from 'components/Projects/Projects.jsx';\nimport About from 'components/About/About.jsx';\nimport SocialMedia from 'components/SocialMedia/SocialMedia.jsx';\n\nfunction App() {\n  return (\n    <div>\n      <Menu />\n      <Projects />\n      <About />\n      <SocialMedia />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}